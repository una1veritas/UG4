#include "mbed.h"
#define MAX 32
#define LAST 500
#define mC 261.626
#define mD 293.665
#define mE 329.628
#define mF 349.228
#define mG 391.995
#define mA 440.000
#define mB 493.883
DigitalOut memoryled1(LED1);
DigitalOut memoryled2(LED3);
DigitalOut myled1(LED2);
DigitalOut myled2(LED4);
LocalFileSystem local("local");
AnalogIn myinput(p20);
AnalogIn memoryinput(p15);
AnalogIn input(p18);
DigitalOut sp1(p5);
Serial pc(USBTX, USBRX);
Ticker timer;
Ticker flipper;
Timer t;
#define ON 1
#define OFF 0
PwmOut servo1(p21);
int dmax,rytmax;
int ryt[MAX]= {0};
int fryt[MAX]= {0};
int fn,fclock,fcount,fx,fi,pushflag,stopflag,fc;
int data[MAX]= {0};
char buf[7]="";
float mm[]= {mC*2,mD*2,mE*2,mF*2,mG*2,mA*2,mB*2,mC*4};
float pwidth;
int oto=0;
int survoflag;
/* sound */
void tick(void)
{
    sp1.write(oto);
    oto=!oto;
}
/* abs(x-y) */
double xabs(double x,double y)
{
    if(x>=y) {
        return(x-y);
    } else if(y>x) {
        return(y-x);
    }
}
/* rythm time(memory only) */
int volt()
{
    int j,clock,m,r,v,timestop;
    double wave;

    clock=0;
    m=0;
    r=0;
    v=0;
    wave=0;
    timestop=0;
    j=0;
    memoryled1=1;
    t.start();
    while(1) {
        wait_ms(1.0);
        wave = (double)myinput*3.3*10;
        if(wave>4.0&&m==0) {
            v++;
            if(v==3) {
                data[j] = t.read_ms() - clock;
                pc.printf("wave:%f\n",wave);
                /*pc.printf("time:%d,clock:%d\n",t.read_ms(),clock);  */
                clock=data[j]+clock;
                /*pc.printf("data[%d]:%d\n",j,data[j]);*/
                timestop=t.read_ms();
                j++;
                m=1;
                memoryled2=1;
            }
        }
        if(wave<1.5&&m==0) {
            v=0;
        }
        if(wave<1.5&&m==1) {
            r++;
            if(r==5) {
                m=0;
                r=0;
                memoryled2=0;
            }
        }
        if(j==MAX) {
            break;
        }
        if(t.read_ms()-timestop>3000) {
            break;
        }
    }
    data[j]=LAST;
    t.stop();
    t.reset();
    return j;
}

/* write file */
void writefile(int i)
{
    int x;
    FILE *fp;

    if ( NULL == (fp = fopen( "/local/Rythm.csv", "w" )) )
        error( "" );//problem
    for(x=0; x<=i; x++) {
        fprintf(fp,"%d\n",data[x]);
    }
    fclose(fp);
}
/* read file */
int readfile()
{
    int i,x;
    FILE *fp;

    i=0;
    dmax=0;
    fp = fopen( "/local/Rythm.csv", "r" );
    if(fp==NULL) {
        return 0;
    } else {
        while(fgets(buf,6,fp)!=NULL) {
            sscanf(buf,"%d\n", &data[i]);
            i++;
        }
        fclose(fp);
        for(x=1; x<i-1; x++) {
            dmax=dmax+data[x];
        }
        for (x=1; x<=i; x++) {
            if(data[x]==0) {
                break;
            }
            timer.attach(&tick,1.0/mm[5]/2.0);
            wait_ms(75);
            timer.detach();
            wait_ms(data[x]-75);
        }
        return i-1;
    }
}

void rythmsearch(){
    int m,r,v,clock,timestop;
    double wave;

    m=0;r=0;v=0;wave=0;timestop=t.read_ms();
    myled1=1;
    myled2=0;
    if(fx==MAX){fx=1;}
    while(1){            
        wave = (double)myinput*3.3*10;        
        if(wave>10.0&&m==0){
            v++;
            if(v==4){
                /*pc.printf("wave:%f\n",wave);*/ 
                if(fx!=fn){ 
                    fryt[fx] = t.read_ms()-fclock;
                    fclock=fryt[fx]+fclock;
                    pc.printf("fryt[%d]:%d\n",fx,fryt[fx]);  
                    fx++;
                    if(fcount==1&&pushflag==0){if(fn==MAX){fn=1;}fn++;pushflag=1;}
                    if(fx==fi+1&&fcount==0){fcount=1;fn=fi;pushflag=1;}            
                    m=1;
                    myled2=1;
                }
                break;
            }
        }
        if(wave<1.5&&m==0){v=0;}        
        if(wave<1.5&&m==1){
            r++;
            if(r==5){m=0;r=0;myled2=0;}
        }
        if(t.read_ms()-timestop>1.0) {
            break;
        }               
    }
    myled2=0;    
}

int rythmcomp(int n,int i){
    int m;
    double dtmp,ryttmp;
    
    if(n==i){n=1;}
    rytmax=0;
    for(m=1;m<i;m++){
        rytmax=rytmax+ryt[m];
    }
    pc.printf("dmax:%d,rytmax:%d\n",dmax,rytmax);
    for(m=1;m<i;m++){
        dtmp=data[m];
        ryttmp=ryt[n];
        if(m==1&&pushflag==1){ryt[n]=fryt[fn];pushflag=0;fc++;}
        /*pc.printf("data[%d]:%f,ryt[%d]:%f,dif:%f\n",m,dtmp,n,ryttmp,xabs((ryttmp/rytmax),(dtmp/dmax)));*/
        n++;
        if(n==i){n=1;}
        if(xabs((ryttmp/rytmax),(dtmp/dmax))>0.04)
        {return 0;}        
    }
    return 1;
}
int rythmpush(){
    int x;
    
    for(x=0;x<fi;x++){
        ryt[x]=fryt[x];
    }
    return 1;
}
void survo(){
    int s;
    s=0;
    servo1.period_ms(20);
    while(s<3){       
        for(pwidth=0.001; pwidth<=0.002; pwidth+=0.0009) { // 1ms ~ 2ms
            servo1.pulsewidth(pwidth); // pulse servo out    
            wait(0.25);
            s++;    
        }
    }
}
int main(){
    int i,j,m,n,survoflag,count,cmp;
    
    i=0;m=0;n=0;survoflag=0;j=0;count=0;fn=-1;fi=0;fx=0;fcount=0;cmp=0;fc=1;pushflag=0;fclock=0;
    
    while(1) {
        if((float)memoryinput==1.0){
            if(j>0){for(m=0;m<=j;m++){data[m]=0;}}
            wait(1.0);
            j=volt();
            writefile(j);
            memoryled1=0;
            memoryled2=0;
            pc.printf("j:%d\n",j);
        }
        if((float)input==1.0){
            if(fi>0){for(m=0;m<=fi;m++){ryt[m]=0;}}
            count=0;        
            fi=readfile();
            pc.printf("fi:%d\n",fi);
            t.start();
            flipper.attach(&rythmsearch,0.004);            
            while(1){
                if(fx==fi&&count==0){count==1;cmp=rythmpush();}            
                if(cmp==1){survoflag=rythmcomp(fc,fi);if(fc==fi){fc=1;}}
                if(survoflag==1){/*survo();survoflag=0;*/t.stop();t.reset();break;}
            }    
            myled1=0;
            myled2=0;
            cmp=0;fn=-1;fi=0;fx=0;fcount=0;cmp=0;fc=1;pushflag=0;fclock=0;
            survoflag=0;
            flipper.detach();
        }
    }             
    return 0;
}